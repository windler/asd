// Code generated by mockery v1.0.0
package mocks

import commands "github.com/windler/ws/app/commands"
import mock "github.com/stretchr/testify/mock"

// WSCommandContext is an autogenerated mock type for the WSCommandContext type
type WSCommandContext struct {
	mock.Mock
}

// GetArgs provides a mock function with given fields:
func (_m *WSCommandContext) GetArgs() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// GetBoolFlag provides a mock function with given fields: flag
func (_m *WSCommandContext) GetBoolFlag(flag string) bool {
	ret := _m.Called(flag)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(flag)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// GetConfig provides a mock function with given fields:
func (_m *WSCommandContext) GetConfig() commands.Config {
	ret := _m.Called()

	var r0 commands.Config
	if rf, ok := ret.Get(0).(func() commands.Config); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(commands.Config)
		}
	}

	return r0
}

// GetIntFlag provides a mock function with given fields: flag
func (_m *WSCommandContext) GetIntFlag(flag string) int {
	ret := _m.Called(flag)

	var r0 int
	if rf, ok := ret.Get(0).(func(string) int); ok {
		r0 = rf(flag)
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// GetStringFlag provides a mock function with given fields: flag
func (_m *WSCommandContext) GetStringFlag(flag string) string {
	ret := _m.Called(flag)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(flag)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
